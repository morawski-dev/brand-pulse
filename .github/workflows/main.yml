name: Backend CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  backend:
    name: Backend Build and Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Temurin JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "21"
          cache: maven
          cache-dependency-path: backend/pom.xml

      - name: Make Maven wrapper executable
        run: chmod +x backend/mvnw

      - name: Build with Maven
        run: ./backend/mvnw -B clean verify -f backend/pom.xml

      - name: Publish test reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: maven-test-reports
          path: |
            backend/target/surefire-reports/
            backend/target/failsafe-reports/
          if-no-files-found: ignore

  frontend:
    name: Frontend Lint and Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install dependencies
        run: npm install
        working-directory: frontend

      - name: Lint
        run: npm run lint
        working-directory: frontend

      - name: Build
        run: npm run build
        working-directory: frontend

  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs:
      - backend
      - frontend
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    env:
      COPILOT_APPLICATION: ${{ secrets.COPILOT_APPLICATION }}
      COPILOT_ENVIRONMENT: ${{ secrets.COPILOT_ENVIRONMENT }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
      IMAGE_TAG: ${{ github.sha }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Install AWS Copilot CLI
        run: |
          curl -Lo copilot https://github.com/aws/copilot-cli/releases/latest/download/copilot-linux
          chmod +x copilot
          sudo mv copilot /usr/local/bin/copilot

      - name: Copilot version
        run: copilot --version

      - name: Deploy backend service
        run: copilot svc deploy --name backend --env "$COPILOT_ENVIRONMENT" --app "$COPILOT_APPLICATION" --tag "$IMAGE_TAG"

      - name: Deploy frontend service
        if: ${{ hashFiles('frontend/package.json') != '' }}
        run: copilot svc deploy --name frontend --env "$COPILOT_ENVIRONMENT" --app "$COPILOT_APPLICATION" --tag "$IMAGE_TAG"

      - name: Smoke test frontend
        env:
          FRONTEND_URL: ${{ secrets.FRONTEND_URL }}
        if: ${{ env.FRONTEND_URL != '' }}
        run: |
          echo "Probing $FRONTEND_URL"
          curl --fail --retry 5 --max-time 10 "$FRONTEND_URL"

      - name: Smoke test backend
        env:
          BACKEND_HEALTH_URL: ${{ secrets.BACKEND_HEALTH_URL }}
        if: ${{ env.BACKEND_HEALTH_URL != '' }}
        run: |
          echo "Probing $BACKEND_HEALTH_URL"
          curl --fail --retry 5 --max-time 10 "$BACKEND_HEALTH_URL"
